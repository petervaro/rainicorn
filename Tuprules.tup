## INFO ##
## INFO ##

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# Decide which compiler to use
ifdef CCOMP:
    CC_NAME = @(CCOMP)
else
    CC_NAME = clang
endif

# If compiler has a specific version
ifdef CCVER
    CC = $(CC_NAME)@(CCVER)
else
    CC = $(CC_NAME)
endif


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# Decide which standard to use
ifdef CSTND:
    STD = -std=@(CSTND)
else
    STD = -std=c11
endif


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# Define generic warning flags
WARN  = -Wall
WARN += -Wextra
WARN += -Wpedantic

# If this is a developer build
ifdef DEVEL
    ifeq ($(CC_NAME),clang)
        WARN += -Weverything
    else
        ifeq ($(CC_NAME),gcc)
            WARN += -Wpadded
        endif
    endif
endif


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# Define compiler flags
CFLAGS  = $(STD)
CFLAGS += $(WARN)
CFLAGS += -O3

# If this is a debug build
ifdef DEBUG
    CFLAGS += -g
    CFLAGS += -v
endif

# Add compiler specific flags
ifeq ($(CC_NAME),clang)
    CFLAGS += -fcolor-diagnostics
    CFLAGS += -fmacro-backtrace-limit=0
else
    ifeq ($(CC_NAME),gcc)
        CFLAGS += -fdiagnostics-color=always
    endif
endif


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
CPPPATH  = -I/usr/include
CPPPATH += -I/usr/local/include


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# Directory of the source files
ifdef SOURCE_INPUT_DIR
    SOURCE_DIR = @(SOURCE_INPUT_DIR)
else
    SOURCE_DIR = src
endif

# Directory of
ifdef LIBRARY_OUTPUT_DIR
    LIBRARY_DIR = @(LIBRARY_OUTPUT_DIR)
else
    LIBRARY_DIR = lib
endif

# Directory of compiled executables
ifdef BINARY_OUTPUT_DIR
    BINARY_DIR = @(BINARY_OUTPUT_DIR)
else
    BINARY_DIR = bin
endif

# Directpry of generated files and compiled objects
ifdef TEMPORARY_OUTPUT_DIR
    BUILD_DIR = @(TEMPORARY_OUTPUT_DIR)
else
    BUILD_DIR = build
endif


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# Compiler macros
!to_obj = |> ^ OBJ: %f => %o^ $(CC) $(CFLAGS) -fPIC -o %o -c %f  |>
!to_lib = |> ^ LIB: %f => %o^ $(CC) -shared -o %o %f             |>
!to_bin = |> ^ BIN: %f => %o^ $(CC) $(CFLAGS) -o %o %f           |>
!to_arc = |> ^ ARC: %f => %o^ ar rcs %o %f                       |>
